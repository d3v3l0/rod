#!/bin/bash

################################################################################
# functions
################################################################################
function help () {
 echo "usage: rod [start|login|stop|ruby|pry|scala|amm|go|gore]" && exit
}

function do_nothing_in_container () {
  echo "In container, action argument is useless" && exit
}

################################################################################
# action sequence
################################################################################
[ -z $1 ] && help && exit
action=$1
case $action in
  start)
    if [ ! -f /etc/repls-on-docker ]; then
      if docker ps | grep -q rod; then
        echo 'rod has already started, try `rod login` to enter the container' && exit
      else
        ttl=86400
        docker run -d --name rod kyagi/rod sh -c "while true; do sleep $ttl; done" && exit
      fi
    else
      do_nothing_in_container
    fi
    ;;
  login)
    if [ ! -f /etc/repls-on-docker ]; then
      if docker ps | grep -q rod; then
        docker exec -it rod bash && exit
      else
        echo 'You need to `rod start` before login' && exit
      fi
    else
      do_nothing_in_container
    fi
    ;;
  stop)
    if [ ! -f /etc/repls-on-docker ]; then
      if docker ps | grep -q rod; then
        (docker stop rod; docker rm rod) > /dev/null && exit
      else
        echo 'No rod container, nothing to do' && exit
      fi
    else
      do_nothing_in_container
    fi
    ;;
  ruby|scala|go|pry|amm|gore) : ;;
  *) help;;
esac

################################################################################
# repl sequence
################################################################################
lang=$1
case $lang in
  ruby|pry)  repl=pry;;
  scala|amm) repl=amm;;
  go|gore)   repl=gore;;
  *)     help;;
esac

if [ -f /etc/repls-on-docker ]; then
  $repl
else
  docker run -it kyagi/rod $repl
fi
